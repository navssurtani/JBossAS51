<project name="tests-jmx-jars">
   <!-- jmx test -->
   <target name="_jars-jmx">
      <mkdir dir="${build.lib}"/>
      <property name="jmx-rsrc" value="${build.resources}/jmx"/>
      
      <!-- build jmxtest.jar -->
      <jar destfile="${build.lib}/jmxtest.jar"
         manifest="${build.etc}/manifest.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/**"/>
            <exclude name="org/jboss/test/jmx/mbean*/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx">
            <include name="test-service.xml"/>
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      
      <!-- build jars for DeployJarUnitTestCase -->
      <jar destfile="${build.lib}/deployjar-invalid.jar">
         <fileset dir="${build.resources}/jmx/deployjar/invalid"/>
      </jar>
      <jar destfile="${build.lib}/deployjar-valid.jar">
         <fileset dir="${build.resources}/jmx/deployjar/valid"/>
      </jar>
      <jar destfile="${build.lib}/deployjar-valid-nested.jar">
         <fileset dir="${build.resources}/jmx/deployjar/valid-nested"/>
      </jar>
      
      <!--build test sar for testing sar deployment -->
      <jar destfile="${build.lib}/testdeploy.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbean/TestDeployer**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbean">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/defaultpkg.sar">
         <metainf dir="${build.resources}/jmx/default"/>
         <fileset dir="${build.classes}">
            <include name="DefaultPkgService*"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/attrtest.sar">
         <metainf dir="${build.resources}/jmx/attrs"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/attrs/AttrTests*"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/complex-attrtest.sar">
         <metainf dir="${build.resources}/jmx/complex-attrs"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/complexattrs/*"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/conftestnormal.sar">
         <metainf dir="${build.resources}/jmx/conf/normal"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/conf/**"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/conftestscoped.sar">
         <metainf dir="${build.resources}/jmx/conf/scoped"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/conf/**"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testdeploya.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeana/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeana">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testdeployb.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeanb/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeanb">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testdeployc.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeanc/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeanc">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testdeployd.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeand/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeand">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testdeploye-util.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeane/util/*"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/testdeploye.sar">
         <metainf dir="${build.resources}/jmx/mbeane/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeane/*"/>
         </fileset>
         <fileset dir="${build.lib}">
            <include name="testdeploye-util.jar"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/jmxproxy.sar">
         <metainf dir="${build.resources}/jmx/proxy/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/proxy/*.class"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/jmxproxyscoped.sar">
         <metainf dir="${build.resources}/jmx/proxy/scoped"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/proxy/*.class"/>
         </fileset>
      </jar>
      
      <!-- ExternalClass ear including a sar and util jar -->
      <jar destfile="${build.lib}/external.sar"
         manifest="${build.resources}/jmx/loading/ext/manifest.mf">
         <metainf dir="${build.resources}/jmx/loading/ext">
            <include name="jboss-service.xml"/>
         </metainf>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/ExternalClass*"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/external-util.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/util/*"/>
         </fileset>
      </jar>
      <ear earfile="${build.lib}/external.ear"
         appxml="${jmx-rsrc}/loading/ext/application.xml">
         <metainf dir="${build.resources}/jmx/loading/ext">
            <include name="jboss-app.xml"/>
         </metainf>
         <fileset dir="${build.lib}">
            <include name="external.sar"/>
            <include name="external-util.jar"/>
         </fileset>
      </ear>
      
      <!-- ResourceTsts case#1, a sar with the classes and resources -->
      <jar destfile="${build.lib}/rsrc1.sar">
         <metainf dir="${build.resources}/jmx/loading/rsrc1"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/ResourceTsts*"/>
         </fileset>
      </jar>
      <!-- ResourceTsts case#2, a sar with the resources and the
      service in a nested jar
      -->
      <jar destfile="${build.lib}/rsrcsvc.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/ResourceTsts*"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/rsrc2.sar">
         <metainf dir="${build.resources}/jmx/loading/rsrc2"/>
         <fileset dir="${build.lib}">
            <include name="rsrcsvc.jar"/>
         </fileset>
      </jar>
      <!-- ResourceTsts case#3, a jar with two sars with only
      the service descriptor metadata and a jar containing the
      service code.
      -->
      <jar destfile="${build.lib}/rsrc31.sar">
         <metainf dir="${build.resources}/jmx/loading/rsrc1"/>
      </jar>
      <jar destfile="${build.lib}/rsrc32.sar">
         <metainf dir="${build.resources}/jmx/loading/rsrc2"/>
      </jar>
      <jar destfile="${build.lib}/rsrc3.jar">
         <fileset dir="${build.lib}">
            <include name="rsrcsvc.jar"/>
            <include name="rsrc31.sar"/>
            <include name="rsrc32.sar"/>
         </fileset>
      </jar>
      <!-- ResourceTsts case#4, a sar with a service descriptor with
      mulitiple mbeans, a resource file with multiple configs
      using a namespace, and the service code in a nested jar
      -->
      <jar destfile="${build.lib}/rsrc4.sar">
         <metainf dir="${build.resources}/jmx/loading/rsrc4"/>
         <fileset dir="${build.lib}">
            <include name="rsrcsvc.jar"/>
         </fileset>
      </jar>
      
      <!-- Tests that a sar jboss-service.xml can include an entity ref
      -->
      <jar destfile="${build.lib}/entityref.sar">
         <metainf dir="${build.resources}/jmx/loading/entityref"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/NoopService*"/>
         </fileset>
      </jar>
      
      <!--build test sar for testing local directory copy deployment -->
      <jar destfile="${build.lib}/testcopylocaldir.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbean/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeanlocaldir">
            <include name="META-INF/jboss-service.xml"/>
            <include name="local-directory/**"/>
         </fileset>
      </jar>
      <!--copy the plain *-service.xml files too -->
      <copy todir="${build.lib}" filtering="no">
         <fileset dir="${build.resources}/jmx">
            <include name="*.xml"/>
         </fileset>
      </copy>
      
      <!--build test sar for testing crash during start -->
      <jar destfile="${build.lib}/testcrashinstart.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeancrashtest/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeancrashtest">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      
      <!--build sar for testing invalid Dynamic MBean that returns null MBeanInfo -->
      <jar destfile="${build.lib}/testnullinfo.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/nullinfo/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/nullinfo">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      
      <!--build sar containing broken deployer.  I don't know how to use this in a unit test-->
      <jar destfile="${build.lib}/brokendeployer.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/deployer/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/deployer">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <!--just a jar, service.xml separate-->
      <jar destfile="${build.lib}/testmbeanclassloader.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbean/TestMB**"/>
         </fileset>
      </jar>
      
      <!--eardeployment, 2 jars of 1 session bean each-->
      
      <!--IMPORTANT!! this test relies on the dd's being in the "wrong" jar -->
      <!--the point of the test is to see if the classes in one jar are visible to
      the deployment descriptors of the other jar -->
      <jar destfile="${build.lib}/sessiona.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/eardeployment/a/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardeployment/b/">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/sessionb.jar"
           manifest="${jmx-rsrc}/eardeployment/b/META-INF/MANIFEST.MF">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/eardeployment/b/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardeployment/a/">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <mkdir dir="${build.lib}/lib"/>
      <jar destfile="${build.lib}/lib/cpm-util.jar">
          <fileset dir="${build.classes}">
             <include name="org/jboss/test/jmx/eardeployment/util/**"/>
          </fileset>
      </jar>
      
      <jar destfile="${build.lib}/eardeployment.ear">
         <fileset dir="${build.lib}">
            <include name="sessiona.jar"/>
            <include name="sessionb.jar"/>
            <include name="lib/cpm-util.jar"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardeployment/">
            <include name="META-INF/application.xml"/>
         </fileset>
      </jar>
      
      <!-- eardepends test -->
      <jar destfile="${build.lib}/eardependsaejb.jar">
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/eardepends/dependent/ejb/*.class"/>
            <include
               name="org/jboss/test/jmx/eardepends/dependent/interfaces/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardepends/dependent">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/eardependsbejb.jar">
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/eardepends/independent/ejb/*.class"/>
            <include
               name="org/jboss/test/jmx/eardepends/independent/interfaces/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardepends/independent">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/eardependsmbean.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/eardepends/mbean/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardepends/mbean">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/eardepends.ear">
         <fileset dir="${build.lib}">
            <include name="eardependsaejb.jar"/>
            <include name="eardependsbejb.jar"/>
            <include name="eardependsmbean.sar"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardepends/app">
            <include name="META-INF/application.xml"/>
            <include name="META-INF/jboss-app.xml"/>
         </fileset>
      </jar>
      
      <!-- Unpackaged ear test -->
      <mkdir dir="${build.lib}/unpacked/eardeployment.ear/META-INF"/>
      <copy
         file="${build.resources}/jmx/eardeployment/META-INF/application.xml"
         todir="${build.lib}/unpacked/eardeployment.ear/META-INF"/>
      <unjar src="${build.lib}/sessiona.jar"
         dest="${build.lib}/unpacked/eardeployment.ear/sessiona.jar"/>
      <unjar src="${build.lib}/sessionb.jar"
         dest="${build.lib}/unpacked/eardeployment.ear/sessionb.jar"/>
      <unjar src="${build.lib}/lib/cpm-util.jar"
         dest="${build.lib}/unpacked/eardeployment.ear/lib/cpm-util.jar"/>
      
      <!-- cpmanifest test -->
      <jar destfile="${build.lib}/abstract.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/Abstract*"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/concrete.jar"
         manifest="${build.resources}/jmx/loading/cpmanifest/META-INF/manifest.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/Concrete*"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/loading/cpmanifest/">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
      <ear earfile="${build.lib}/cpmanifest.ear"
         appxml="${jmx-rsrc}/loading/cpmanifest/META-INF/application.xml">
         <fileset dir="${build.lib}">
            <include name="abstract.jar"/>
            <include name="concrete.jar"/>
         </fileset>
      </ear>
      
      <!-- cpcircular-manifest test -->
      <jar destfile="${build.lib}/abstract2.jar"
         manifest="${jmx-rsrc}/loading/cpmanifest/META-INF/a2cmanifest.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/Abstract*"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/concrete2.jar"
         manifest="${jmx-rsrc}/loading/cpmanifest/META-INF/c2amanifest.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/loading/Concrete*"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/loading/cpmanifest/">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
      <ear earfile="${build.lib}/cpcircular-manifest.ear"
         appxml="${jmx-rsrc}/loading/cpmanifest/META-INF/application-circular.xml">
         <fileset dir="${build.lib}">
            <include name="abstract2.jar"/>
            <include name="concrete2.jar"/>
         </fileset>
      </ear>
      
      <!-- cpejbs-manifest test -->
      <jar destfile="${build.lib}/ejbjar1.jar"
         manifest="${jmx-rsrc}/loading/cpmanifest/META-INF/ejbjar1.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/eardeployment/a/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardeployment/a/">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/ejbjar2.jar"
         manifest="${jmx-rsrc}/loading/cpmanifest/META-INF/ejbjar2.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/eardeployment/b/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/eardeployment/b/">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      <ear earfile="${build.lib}/cpejbs-manifest.ear"
         appxml="${jmx-rsrc}/loading/cpmanifest/META-INF/application-ejbs.xml">
         <fileset dir="${build.lib}">
            <include name="ejbjar1.jar"/>
            <include name="ejbjar2.jar"/>
            <include name="lib/cpm-util.jar"/>
         </fileset>
      </ear>
      
      <!-- jar in sar with jsr-77 mbeans -->
      <jar destfile="${build.lib}/jarinsar.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/ejb/TestDataSourceBean.class"/>
            <include
               name="org/jboss/test/jmx/interfaces/TestDataSource*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/jarinsar.sar">
         <fileset dir="${build.lib}">
            <include name="jarinsar.jar"/>
         </fileset>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbeana/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/mbeana">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      
      
      <!--package with external jndi dependencies, for undeploy of broken package-->
      <jar destfile="${build.lib}/undeploybroken.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/ejb/Entity*.class"/>
            <include name="org/jboss/test/jmx/interfaces/Entity*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/undeploy">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      
      <!-- EJB jars used by UndeployBrokenPackageUnitTestCase -->
      <jar destfile="${build.lib}/ejbredeploy-bad.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/ejb/EntityABean.class"/>
            <include name="org/jboss/test/jmx/interfaces/EntityA*.class"/>
         </fileset>
         <metainf dir="${source.resources}/jmx/undeploy/bad-inf"/>
      </jar>
      <jar destfile="${build.lib}/ejbredeploy-good.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/ejb/EntityABean.class"/>
            <include name="org/jboss/test/jmx/interfaces/EntityA*.class"/>
         </fileset>
         <metainf dir="${source.resources}/jmx/undeploy/good-inf"/>
      </jar>
      
      <!-- SimpleService tests -->
      <jar jarfile="${build.lib}/jmx-simpleservice.sar">
         <metainf dir="${build.resources}/jmx/simpleservice/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/simpleservice/*.class"/>
         </fileset>
      </jar>
      
      <!-- ListenerServiceMBeanSupport, filterfactory tests -->
      <jar jarfile="${build.lib}/listener-simpletest.sar">
         <metainf
            dir="${build.resources}/jmx/listener/simpletestservice/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/listener/TestService.class"/>
            <include
               name="org/jboss/test/jmx/listener/TestServiceMBean.class"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/listener-deploymentinfo.sar">
         <metainf
            dir="${build.resources}/jmx/listener/deploymentinfo/META-INF"/>
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/listener/NotificationListener.class"/>
            <include
               name="org/jboss/test/jmx/listener/NotificationListenerMBean.class"/>
         </fileset>
      </jar>
      
      <!--xmbean test deployment-->
      <jar destfile="${build.lib}/user-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/xmbean">
            <include name="**/User.xml"/>
         </fileset>
      </jar>
      
      <!-- xmbean mbeaninfo test -->
      <jar destfile="${build.lib}/mbeaninfo-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/mbeaninfo"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/Test.class"/>
            <include name="org/jboss/test/jmx/xmbean/TestMBean.class"/>
         </fileset>
      </jar>
      
      <!--xmbean embedded dd tests -->
      <jar destfile="${build.lib}/user2-xmbean-embedded.sar">
         <metainf dir="${build.resources}/jmx/xmbean/embedded"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/User2.class"/>
            <include name="org/jboss/test/jmx/xmbean/CustomType*.class"/>
         </fileset>
      </jar>
      <!--xmbean persistence tests -->
      <jar destfile="${build.lib}/user2-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/user2"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/User2.class"/>
            <include
               name="org/jboss/test/jmx/xmbean/XMLFilePersistenceManager.class"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/user3-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/user2"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/User2.class"/>
            <include
               name="org/jboss/test/jmx/xmbean/XMLFilePersistenceManager.class"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${build.resources}/jmx/xmbean">
            <include name="RemoveUser2Store.bsh"/>
            <include name="RemoveUser3Store.bsh"/>
         </fileset>
      </copy>
      
      <!-- xmbean XMLAttributePersistenceManagerTestService -->
      <jar jarfile="${build.lib}/xmlapm-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/xml-attr-pers/META-INF"/>
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/xmbean/XMLAttributePersistenceManagerTestService.class"/>
         </fileset>
      </jar>
      
      <!-- xmbean AVC generation from wrapped standard mbean impl -->
      <jar jarfile="${build.lib}/listener-xmbean.sar">
         <metainf dir="${build.resources}/jmx/xmbean/listener/META-INF"/>
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/xmbean/SelfListenerService.class"/>
         </fileset>
      </jar>
      
      <!-- xmbean that exposes the Interceptable interface -->
      <jar jarfile="${build.lib}/interceptable-xmbean.sar">
         <metainf
            dir="${build.resources}/jmx/interceptors/interceptable/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/interceptors/AdderPOJO.class"/>
         </fileset>
      </jar>
      
      <!-- mbean that attached an interceptor to the Interceptable xmbean -->
      <jar jarfile="${build.lib}/adderinterceptor-mbean.sar">
         <metainf
            dir="${build.resources}/jmx/interceptors/adderinterceptor/META-INF"/>
         <fileset dir="${build.classes}">
            <include
               name="org/jboss/test/jmx/interceptors/AdderInterceptorService.class"/>
            <include
               name="org/jboss/test/jmx/interceptors/AdderInterceptorServiceMBean.class"/>
         </fileset>
      </jar>
      
      <!-- Tests of xmbeans with custom interceptors -->
      <jar destfile="${build.lib}/interceptors-xmbean.sar">
         <metainf dir="${build.resources}/jmx/interceptors">
            <include name="jboss-structure.xml"/>
            <include name="jboss-service.xml"/>
            <include name="secured-xmbean.xml"/>
            <include name="naming-xmbean.xml"/>
         </metainf>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/interceptors/*.class"/>
         </fileset>
         <fileset dir="${build.resources}">
            <include name="jmx/interceptors/*.properties"/>
            <include name="jmx/interceptors/security-config.xml"/>
            <include name="jmx/interceptors/scripts/*"/>
         </fileset>
      </jar>
      
      <!-- Test xmbean persistence with a custom attribute -->
      <jar destfile="${build.lib}/xmbean-custom-attr-pers.sar">
         <metainf dir="${build.resources}/jmx/xmbean/custom-attr-pers">
            <include name="jboss-service.xml"/>
            <include name="jboss-xmbean.xml"/>
         </metainf>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/xmbean/CustomType.class"/>
             <include name="org/jboss/test/jmx/xmbean/ServiceUsingCustomAttribute.class"/>
         </fileset>    	
      </jar>
      
      <!-- Test xmbean descriptor importing an external xml entity -->
      <jar destfile="${build.lib}/xmbean-entity-import.sar">
         <metainf dir="${build.resources}/jmx/xmbean/xmbean-entity-import">
            <include name="jboss-service.xml"/>
            <include name="xmbean.xml"/>
            <include name="operations.ent"/>
         </metainf>
      </jar>
      
      <!-- invoker adaptor test sar -->
      <jar destfile="${build.lib}/invoker-adaptor-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/invoker/*.class"/>
            <include
               name="org/jboss/test/jmx/interceptors/PrincipalInterceptor.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/invoker/sar">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>

      <!-- invoker adaptor test war -->
      <jar destfile="${build.lib}/dummy.war">
         <fileset dir="${build.resources}/jmx/invoker/war">
            <include name="*l"/>
         </fileset>
      </jar>
      
      <!-- invoker adaptor test ear -->
      <jar destfile="${build.lib}/invoker-adaptor-test.ear">
         <fileset dir="${build.lib}">
            <include name="invoker-adaptor-test.sar"/>
            <include name="dummy.war"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/invoker/ear">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      
      <!-- invoker proxy test sar -->
      <jar jarfile="${build.lib}/invoker-proxy-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/invokerproxy/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/invokerproxy">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      
      <!-- On windows the codebase needs an extra slash
      because the codebaseURL starts with a drive letter -->
      <condition property="slash" value="/"><os family="windows"/></condition>
      <condition property="slash" value=""><os family="unix"/></condition>
      <pathconvert targetos="unix" property="codebaseURL">
         <path path="${build.lib}"/>
      </pathconvert>
      <copy todir="${build.lib}" filtering="true" overwrite="true"
         file="${build.resources}/jmx/archivestest-service.xml">
         <filterset>
            <filter token="codebase" value="file://${slash}${codebaseURL}"/>
         </filterset>
      </copy>
      <echo message="+++ build.lib=${build.lib}"/>            
      <echo message="+++ codebase=file://${slash}${codebaseURL}"/>
      
      <!-- internal test sar -->
      <jar destfile="${build.lib}/jmx-nointernal.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/internal/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/internal">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      
      <!-- explicit standard interface sar -->
      <jar destfile="${build.lib}/explicit-standard-interface.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/standard/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/standard">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>

      <!-- multiple -service.xml files -->
      <jar destfile="${build.lib}/multiple-service-files.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/standard/**"/>
         </fileset>
         <fileset dir="${build.resources}/jmx/multiple">
            <include name="META-INF/*-service.xml"/>
         </fileset>
      </jar>

      <!-- A shutdown sar for the minimal config test -->
      <jar destfile="${build.lib}/shutdown.sar">
         <metainf dir="${build.resources}/jmx/shutdown"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/shutdown/*"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/pauseinstart.sar">
         <metainf dir="${build.resources}/jmx/pauseinstart"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/pauseinstart/**"/>
         </fileset>
      </jar>

      <copy todir="${build.lib}"
            file="${build.resources}/jmx/jbosstest-urlscanner-service.xml">
      </copy>
      
      <mkdir dir="${build.lib}/urlscannertest"/>

      <!-- Temp File Creator Service -->
      <jar destfile="${build.lib}/tempfilecreator.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/mbean/Temp**"/>
         </fileset>
      </jar>
      
      <jar destfile="${build.lib}/testannotatedjmxpojo.beans">
         <metainf dir="${build.resources}/jmx/annotated/META-INF"/>
         <fileset dir="${build.classes}">
            <include name="org/jboss/test/jmx/annotated/**"/>
         </fileset>
      </jar>

   	
   	  <!-- JBAS-5822 -->
      <jar destfile="${build.lib}/testjmx-valuefactory.sar">
        <metainf dir="${build.resources}/jmx/valuefactory">
           <include name="jboss-beans.xml"/>
        </metainf>
       <fileset dir="${build.resources}/jmx/valuefactory">
          <include name="*-service.xml"/>
       </fileset>
       <fileset dir="${build.classes}">
          <include name="org/jboss/test/jmx/valuefactory/**"/>
       </fileset>
    </jar>
   </target>
</project>
