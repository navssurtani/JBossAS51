<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
   <!ENTITY modules SYSTEM "../tools/etc/buildmagic/modules.ent">
   <!ENTITY targets SYSTEM "../tools/etc/buildmagic/targets.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<project default="main" name="JBoss/HornetQ Integration">

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <!--
     | Include the common Buildmagic elements.
     |
     | This defines several different targets, properties and paths.
     | It also sets up the basic extention tasks amoung other things.
   -->

    <property name="javac.target" value="1.5"/>
    <property name="javac.source" value="1.5"/>

	&buildmagic;

  <!--
     | Include the normal targets.
   -->
  &targets;

  <!-- ================================================================== -->
  <!-- Configuration                                                      -->
  <!-- ================================================================== -->

  <!--
     | Configure the build system.
     |
     | This target is invoked by the Buildmagic initialization logic and
     | should contain module specific configuration elements.
   -->

  <target name="configure" unless="configure.disable">

    <!-- =================== -->
    <!-- Basic Configuration -->
    <!-- =================== -->
    <property name="module.name" value="hornetq-int"/>
    <property name="module.Name" value="HornetQ Integration"/>

     <!-- The combined thirdparty classpath -->
    <path id="thirdparty.classpath">
      <path refid="library.classpath"/>
      <path refid="dependentmodule.classpath"/>
    </path>

    <!-- classpath and local.classpath must have a value using with a path -->
    <property name="classpath" value=""/>
    <property name="local.classpath" value=""/>

    <!-- The classpath required to build classes. -->
    <path id="javac.classpath">
      <pathelement path="${classpath}"/>
      <pathelement path="${local.classpath}"/>
      <path refid="thirdparty.classpath"/>
    </path>

    <!-- ========= -->
    <!-- Libraries -->
    <!-- ========= -->
    &libraries;

     <!-- The combined library classpath -->
    <path id="library.classpath">
      <path refid="jboss.common.logging.spi.classpath"/>
      <path refid="org.hornetq.classpath"/>
      <path refid="jboss.jboss.man.classpath"/>
      <path refid="jboss.jboss.deployers.classpath"/>
      <path refid="jboss.microcontainer.classpath"/>
      <path refid="org.jboss.javaee.classpath"/>
      <path refid="jboss.metadata.classpath"/>
      <path  refid="jboss.common.core.classpath"/>
      <path  refid="jboss.microcontainer.classpath"/>
      <path  refid="jboss.profileservice.spi.classpath"/>
      <path  refid="jboss.jboss.vfs.classpath"/>
      <path  refid="jboss.jboss.mdr.classpath"/>

      <path refid="jboss.server.classpath"/>
    </path>

    <!-- ======= -->
    <!-- Modules -->
    <!-- ======= -->
    &modules;

    <!-- Specify modules upon which this build depends -->
    <path id="dependentmodule.classpath">
    </path>
    <!-- ======= -->
    <!-- Modules -->
    <!-- ======= -->
    &modules;
    <call target="_default:task-init"/>
  </target>

  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->

  <!--
     |  Compile everything.
     |
     |  This target should depend on other compile-* targets for each
     |  different type of compile that needs to be performed, short of
     |  documentation compiles.
    -->
  <target name="compile"
    description="Compile all source files."
    depends="compile-classes, compile-resources"/>

  <!-- Compile all class files -->
  <target name="compile-classes" depends="init">
     <property name="myclasspath" refid="javac.classpath"/>
         <echo message="classpath= ${myclasspath}"/>

    <mkdir dir="${build.classes}"/>
    <javac destdir="${build.classes}"
      optimize="${javac.optimize}"
      target="${javac.target}"
      source="${javac.source}"
      debug="${javac.debug}"
      depend="${javac.depend}"
      verbose="${javac.verbose}"
      deprecation="${javac.deprecation}"
      includeAntRuntime="${javac.include.ant.runtime}"
      includeJavaRuntime="${javac.include.java.runtime}"
      includes="${javac.includes}"
      excludes="${javac.excludes}"
      failonerror="${javac.fail.onerror}">
      <src path="${source.java}"/>
      <classpath refid="javac.classpath"/>
    </javac>
  </target>

   <!-- Compile resource files -->
  <target name="compile-resources" depends="init">
    <mkdir dir="${build.resources}"/>
    <copy todir="${build.resources}" filtering="yes">
      <fileset dir="${source.resources}">
        <include name="**/*"/>
      </fileset>

    </copy>
     
    <unzip dest="output/etc" src="${org.hornetq.lib}/hornetq-resources.jar"/>

    <replace dir="output/etc/examples/javaee" value="">
       <replacetoken><![CDATA[@ResourceAdapter("hornetq-ra.rar")]]></replacetoken>
    </replace>
     <echo>andytaylor</echo>
     <copy todir="output/etc">
        <fileset dir="${source.etc}">
          <include name="switch.sh"/>
          <include name="build.xml"/>
        </fileset>
     </copy>
     <copy tofile="output/etc/examples/common/build.xml" file="${source.etc}/jms-examples-build.xml"/>
     <copy tofile="output/etc/examples/javaee/common/build.xml" file="${source.etc}/javaee-examples-build.xml"/>
  </target>

  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->
  <target name="module-jars"
    description="Builds hornetq jar files.">
    <!-- Generate a jar containing all the compiled sources -->
    <jar destfile="${build.lib}/${module.name}.jar">
      <fileset dir="${build.classes}"/>
    </jar>
  </target>

</project>
