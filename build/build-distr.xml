<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
]>

<project name="JBoss/Build">

  &libraries;

  <!-- ================================================================== -->
  <!-- Module Pass-through Hooks                                          -->
  <!-- ================================================================== -->

  <!--
  | These hooks are executed after the above pass-through targets have
  | finished with a given module.
  -->

  <!-- ======== -->
  <!-- Remoting -->
  <!-- ======== -->

  <target name="_module-jbossas/remoting-most">
    <property name="_module.name" value="remoting" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/jbossas/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jbossas-remoting.jar"/>
      </fileset>
    </copy>

    <!-- Copy the third party libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jboss.remoting.lib}">
        <include name="jboss-remoting.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jboss.serialization.lib}">
        <include name="jboss-serialization.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="_module-remoting-all" depends="_module-jbossas/remoting-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- ============ -->
  <!-- JMX Remoting -->
  <!-- ============ -->

  <target name="_module-jmx-remoting-most">
    <property name="_module.name" value="jmx-remoting" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.examples}/jmx/jmx-remoting.sar"/>
    <copy todir="${install.examples}/jmx/jmx-remoting.sar" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jmx-remoting.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="_module-jmx-remoting-all" depends="_module-jmx-remoting-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-jbossas/jmx-remoting-all" depends="_module-jbossas/jmx-remoting-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-jbossas/jmx-remoting-most">
    <property name="_module.name" value="jbossas/jmx-remoting" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <unjar src="${project.root}/${_module.name}/output/lib/jmx-remoting.sar" dest="${install.examples}/jmx/jmx-remoting.sar"/>
  </target>

  <!-- ======== -->
  <!-- EJB 3.0 -->
  <!-- ======== -->

  <target name="_module-ejb3-most">
    <property name="_module.name" value="ejb3" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <unjar src="${jboss.jboss.ejb3.deployers.lib}/jboss-ejb3-deployers.jar"
      dest="${install.server}/all/deployers">
      <patternset>
         <include name="META-INF/ejb3-deployers-jboss-beans.xml"/>
      </patternset>
      <mapper type="flatten"/>
    </unjar>

    <copy todir="${install.server}/all/deploy" filtering="no">
      <fileset dir="${_module.output}/resources">
        <include name="ejb3-container-jboss-beans.xml"/>
        <include name="ejb3-interceptors-aop.xml"/>
        <include name="ejb3-timerservice-jboss-beans.xml"/>
      	<include name="ejb3-connectors-jboss-beans.xml"/>
      </fileset>
    </copy>

    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="ejb3.deployer/**"/>
      </fileset>
      <fileset dir="${jboss.jboss.ejb3.endpoint.deployer.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.metrics.deployer.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
    </copy>
    
    <!-- Copy the third party libraries -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jboss.jboss.ejb3.cache.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.common.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.context.base.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.context.naming.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.core.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.deployers.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.ext.api.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.ext.api.impl.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.interceptors.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.jpa.int.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.metadata.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.mc.int.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.impl.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.spi.lib}" includes="*.jar"
                     excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.clustered.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.security.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar, *-client.jar, *-tests.jar"/>
      <fileset dir="${jboss.jboss.ejb3.timerservice.spi.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.transactions.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.timeout.spi.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.timeout.3.0.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.vfs.spi.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.vfs.impl.vfs2.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${hibernate.commons.annotations.lib}" includes="*.jar"
                excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${hibernate.entitymanager.lib}" includes="*.jar"
                excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${hibernate.annotations.lib}" includes="*.jar"
                excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${hibernate.validator.lib}" includes="*.jar"
                excludes="*-sources.jar, *-javadoc.jar"/> 
      <fileset dir="${jboss.jboss.jpa.deployers.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
      <fileset dir="${jboss.jboss.ejb3.endpoint.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>

    </copy>

    <!-- Copy across client jars -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-appclient.jar"/>
      </fileset>
      <fileset dir="${hibernate.entitymanager.lib}">
        <include name="ejb3-persistence.jar"/>
      </fileset>
      <fileset dir="${hibernate.hibernate.lib}">
        <include name="hibernate-core.jar"/>
      </fileset>
      <fileset dir="${hibernate.annotations.lib}">
        <include name="hibernate-annotations.jar"/>
      </fileset>
      <fileset dir="${hibernate.commons.annotations.lib}">
        <include name="hibernate-commons-annotations.jar"/>
      </fileset>
      <fileset dir="${hibernate.validator.lib}">
        <include name="hibernate-validator.jar"/>
      </fileset>
      <fileset dir="${jboss.aop.lib}">
        <include name="jboss-aop-client.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.ejb3.ext.api.lib}" includes="*.jar" excludes="*sources.jar"/>
      <!-- For JSR-250 impl -->
      <fileset dir="${jboss.jboss.ejb3.ext.api.impl.lib}" includes="*.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.common.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.core.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.impl.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.spi.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.proxy.clustered.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.security.lib}" includes="*-client.jar" excludes="*sources.jar"/>
      <fileset dir="${jboss.jboss.ejb3.vfs.spi.lib}" includes="*.jar" excludes="*sources.jar"/>
    </copy>
  </target>

  <target name="_module-ejb3-all" depends="_module-ejb3-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- ======== -->
  <!-- ASPECTS -->
  <!-- ======== -->

  <target name="_module-aspects-most">
    <property name="_module.name" value="aspects" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <property name="aop.deployer" value="jboss-aop-jboss5.deployer"/>
    <!-- Copy the generated libraries -->
    <unjar src="${_module.output}/lib/${aop.deployer}" dest="${install.server}/all/deployers/${aop.deployer}"/>

    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
       <fileset dir="${jboss.aop.lib}">
          <include name="jboss-asi.jar"/>
       </fileset>
    </copy>

    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${jboss.aop.lib}">
        <include name="jboss-aop-asintegration-core.jar"/>
        <include name="jboss-aop-asintegration-jmx.jar"/>
        <include name="jboss-aop-asintegration-mc.jar"/>
        <include name="jboss-aop-deployers.jar"/>
      </fileset>
    </copy>

    <!-- Copy across client jars -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-aspect-jdk50-client.jar"/>
      </fileset>
    </copy>
    <!-- Copy the third party libraries -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${org.jboss.aspects.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
   </copy>
  </target>

  <target name="_module-aspects-all" depends="_module-aspects-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- ==== -->
  <!-- Main -->
  <!-- ==== -->

  <target name="_module-main-most">
    <property name="_module.name" value="main" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="log4j-boot.jar"/>
        <include name="jboss-main.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="*-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated scripts & runnable jars -->
    <mkdir dir="${install.bin}"/>
    <copy todir="${install.bin}" filtering="no">
      <fileset dir="${_module.output}/bin">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${_module.output}/lib">
        <include name="run.jar"/>
      </fileset>
    </copy>
    <chmod perm="+x">
      <fileset dir="${install.bin}">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>

    <!-- Copy thirdparty code -->
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${gnu.getopt.lib}">
        <include name="getopt.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${apache.log4j.lib}">
        <include name="log4j.jar"/>
      </fileset>
    </copy>
    <copy file="${snmptrapappender.snmptrapappender.lib}/snmpTrapAppender.jar" tofile="${install.all.lib}/log4j-snmp-appender.jar">
    </copy>

    <!-- Copy thirdparty client code -->
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${apache.log4j.lib}">
        <include name="log4j.jar"/>
      </fileset>
      <fileset dir="${gnu.getopt.lib}">
        <include name="getopt.jar"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-main-all" depends="_module-main-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ====== -->
  <!-- System -->
  <!-- ====== -->

  <target name="_module-system-most">
    <property name="_module.name" value="system" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-system.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="*-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy the DTDs -->
    <mkdir dir="${install.dtd}"/>
    <copy todir="${install.dtd}" filtering="no">
      <fileset dir="${project.root}/${_module.name}/src/resources/dtd"/>
    </copy>

  </target>

  <target name="_module-system-all" depends="_module-system-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>
  <target name="_module-system-jmx-most">
    <property name="_module.name" value="system-jmx" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-system-jmx.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-system-jmx-client.jar"/>
      </fileset>
    </copy>
  </target>
  <target name="_module-system-jmx-all" depends="_module-system-jmx-most">
  </target>

  <!-- ====== -->
  <!-- Server -->
  <!-- ====== -->

  <target name="_module-server-most">
    <property name="_module.name" value="server" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the security-policies-service.xml -->
    <copy todir="${install.server}/all/deploy" filtering="no">
      <fileset dir="${_module.output}/resources">
        <include name="security-jboss-beans.xml"/>
        <include name="security-policies-service.xml"/>
      </fileset>
    </copy>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss.jar"/>
        <include name="jboss-metamodel.jar"/>
        <include name="jmx-adaptor-plugin.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="*-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated scripts & runnable jars -->
    <mkdir dir="${install.bin}"/>
    <copy todir="${install.bin}" filtering="no">
      <fileset dir="${_module.output}/bin">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${_module.output}/lib">
        <include name="deployer.jar"/>
        <include name="shutdown.jar"/>
      </fileset>
    </copy>
    <chmod perm="+x">
      <fileset dir="${install.bin}">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>

    <!-- Copy thirdparty code -->
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${oswego.concurrent.lib}">
        <include name="concurrent.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${apache.bcel.lib}">
        <include name="bcel.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty client code -->
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${oswego.concurrent.lib}">
        <include name="concurrent.jar"/>
      </fileset>
    </copy>

    <!-- Default server config -->

    <mkdir dir="${install.server}/all/deploy"/>
    <copy todir="${install.server}/all/deploy" filtering="no">
      <!-- Deployable xml snipets -->
      <fileset dir="${_module.output}/etc/deploy">
        <include name="**"/>
      </fileset>

      <!-- Deployable archives -->
      <fileset dir="${_module.output}/lib">
        <include name="uuid-key-generator.sar/**"/>
        <include name="sqlexception-service.xml"/>
        <include name="client-deployer-service.xml"/>
      </fileset>
    </copy>

    <!-- Copy the deployers -->
    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/etc/deployers">
        <include name="**"/>
      </fileset>
    </copy>

    <copy file="${_module.output}/resources/jmx-invoker-adaptor/META-INF/jboss-service.xml" tofile="${install.all.deploy}/jmx-invoker-service.xml"/>

    <!-- Copy the "all" configuration files -->
    <mkdir dir="${install.server}/all/conf"/>
    <copy todir="${install.server}/all/conf" filtering="no">
      <fileset dir="${_module.output}/etc/conf/all"/>
    </copy>

  </target>

  <target name="_module-server-all" depends="_module-server-most">

    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ========= -->
  <!-- Connector -->
  <!-- ========= -->

  <target name="_module-connector-most">
    <property name="_module.name" value="connector" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <mkdir dir="${install.server}/all/deployers"/>

    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jca.deployer/**"/>
      </fileset>
    </copy>

    <!--
    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/resources/deployers">
        <include name="jca-deployers-jboss-beans.xml"/>
      </fileset>
    </copy>
    -->

    <!-- Copy the generated deployment libraries -->
    <mkdir dir="${install.server}/all/deploy"/>
    <unjar src="${_module.output}/lib/jboss-local-jdbc.rar" dest="${install.server}/all/deploy/jboss-local-jdbc.rar"/>
    <unjar src="${_module.output}/lib/jboss-xa-jdbc.rar" dest="${install.server}/all/deploy/jboss-xa-jdbc.rar"/>
    <unjar src="${_module.output}/lib/mail-ra.rar" dest="${install.server}/all/deploy/mail-ra.rar"/>
    <unjar src="${_module.output}/lib/quartz-ra.rar" dest="${install.server}/all/deploy/quartz-ra.rar"/>
    <copy todir="${install.server}/all/deploy" filtering="no">
      <fileset dir="${_module.output}/resources/jca-sar">
        <include name="jca-jboss-beans.xml"/>
        <include name="jca-jboss-beans-production.xml"/>
      </fileset>
    </copy>
    <unjar src="${_module.output}/lib/jms-ra.rar" dest="${install.all.deploy}/jms-ra.rar"/>
    <copy todir="${install.all.deploy}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jms-ra.rar"/>
      </fileset>
    </copy>

    <mkdir dir="${install.server}/all/lib"/>
    <copy todir="${install.server}/all/lib" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-common-jdbc-wrapper.jar"/>
        <include name="jboss-jca.jar"/>
      </fileset>
    </copy>

    <!-- Copy the dtds -->
    <mkdir dir="${install.dtd}"/>
    <copy todir="${install.dtd}" filtering="no">
      <fileset dir="${project.root}/${_module.name}/output/resources/dtd"/>
    </copy>

    <!-- Copy example db configs -->
    <mkdir dir="${install.examples.jca}"/>
    <copy todir="${install.examples.jca}" filtering="no">
      <fileset dir="${_module.output}/etc/example-config">
        <include name="*.xml"/>
      </fileset>
    </copy>
    <copy todir="${install.server}/all/deploy" filtering="no">
      <fileset dir="${_module.output}/etc/example-config">
        <!--include name="firebird-service.xml"/-->
        <include name="hsqldb-ds.xml"/>
        <!--include name="mysql-service.xml"/-->
        <!--include name="oracle-service.xml"/-->
        <!--include name="postgres-service.xml"/-->
      </fileset>
    </copy>

    <!--
    <mkdir dir="${install.all.deploy}/jms"/>
    <copy todir="${install.all.deploy}/jms" filtering="no">
    <fileset dir="${_module.output}/etc/example-config">
    <include name="hajndi-jms-ds.xml"/>
    </fileset>
    </copy>
    -->

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jbosscx-client.jar"/>
      </fileset>
    </copy>

    <!-- QUARTZ jar -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${quartz.quartz.lib}" includes="quartz.jar"/>
    </copy>

  </target>

  <target name="_module-connector-all" depends="_module-connector-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!--Copy generated jmx documentation -->
    <mkdir dir="${install.jmx-api}"/>
    <copy todir="${install.jmx-api}" filtering="no" failonerror="false">
      <fileset dir="${_module.output}/jmx-api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ========= -->
  <!-- Messaging -->
  <!-- ========= -->

  <target name="_module-messaging-most">
    <property name="_module.name" value="messaging" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

     <!--
           jboss-messaging libraries, unscoped deployment, same for "all" and "default" configurations.
     -->
     <mkdir dir="${install.all.lib}"/>
     <copy todir="${install.all.lib}" filtering="no">
        <fileset dir="${jboss.messaging.lib}">
           <include name="jboss-messaging.jar"/>
        </fileset>
        <fileset dir="${_module.output}/lib">
           <include name="jboss-messaging-int.jar"/>
        </fileset>
     </copy>
  	
  	<!--
  		JBAS-6850: Replace Queue and Topic xmbean defintion.  
  	-->
  	 <jar destfile="${install.all.lib}/jboss-messaging.jar" update="true">
  	 	<fileset dir="${_module.output}/etc/">
  	 		<include name="xmdesc/Queue-xmbean.xml"/>
  	 		<include name="xmdesc/Topic-xmbean.xml"/>
  	 	</fileset>
  	 </jar>

     <!--
          Security metadata, same for "all" and "default" configurations.
     -->
     <mkdir dir="${install.all.conf}/props"/>
     <copy todir="${install.all.conf}/props">
        <fileset dir="${_module.output}/etc/deploy/common">
           <include name="messaging-*.properties"/>
        </fileset>
     </copy>

     <!--
          Generated client libraries, same for "all" and "default" configurations.
     -->
     <mkdir dir="${install.client}"/>
     <copy todir="${install.client}" filtering="no"
         file="${jboss.messaging.lib}/jboss-messaging-client.jar"/>

     <!--
        Clustered Config, using HSQLDB (but not supposed to go into production mode, since clustering requires a shared DB)
     -->
     <mkdir dir="${install.all.deploy}/messaging"/>
     <copy tofile="${install.all.deploy}/messaging/hsqldb-persistence-service.xml"
         file="${jboss.messaging.resources}/clustered-hsqldb-persistence-service.xml"/>
     <copy todir="${install.all.deploy}/messaging">
        <fileset dir="${_module.output}/etc/deploy/common">
           <include name="*-service.xml"/>
            <include name="*-jboss-beans.xml"/>
            <include name="jms-ds.xml"/>
            <include name="destinations-service.xml"/>
        </fileset>
        <fileset dir="${jboss.messaging.resources}/">
            <include name="connection-factories-service.xml"/>
            <include name="remoting-bisocket-service.xml"/>
        </fileset>
     </copy>

     <!--
          Default configuration
     -->
     <mkdir dir="${install.default.deploy}/messaging"/>
     <copy todir="${install.default.deploy}/messaging">
        <fileset dir="${_module.output}/etc/deploy/common">
           <include name="*-service.xml"/>
           <include name="*-jboss-beans.xml"/>
           <include name="jms-ds.xml"/>
        </fileset>
        <fileset dir="${jboss.messaging.resources}/">
            <include name="connection-factories-service.xml"/>
            <include name="hsqldb-persistence-service.xml"/>
            <include name="remoting-bisocket-service.xml"/>
        </fileset>
     </copy>
  	
  	<!-- 
  		The messaging profileservice definitions, to default and all
  	-->
  	<copy todir="${install.default.deployers}">
  		<fileset dir="${_module.output}/etc/deployers">
			<include name="*-jboss-beans.xml"/>
  		</fileset>
  	</copy>
  	<copy todir="${install.all.deployers}">
  		<fileset dir="${_module.output}/etc/deployers">
			<include name="*-jboss-beans.xml"/>
  		</fileset>
  	</copy>
  	
     <!-- copy example jms configs -->
     <mkdir dir="${install.examples.jms}"/>
     <copy todir="${install.examples.jms}" filtering="no">
       <fileset dir="${jboss.messaging.resources}">
         <include name="*-persistence-service.xml"/>
         <include name="remoting-*-service.xml"/>
       </fileset>
     </copy>

     <!-- the JBM bundled destinations-service.xml comes with many examples -->
     <copy file="${jboss.messaging.resources}/destinations-service.xml"
       tofile="${install.examples.jms}/example-destinations-service.xml"/>

     <!-- JBM source code examples for JBoss 5
     <mkdir dir="${install.examples.jms}"/>
     <copy todir="${install.examples.jms}" filtering="no">
       <fileset dir="${_module.output}/etc/"/>
     </copy>
     -->
     <!-- need to copy the following files as AS5 build while change the contents of them
     <copy todir="${install.examples.jms}/examples/secure-socket/etc/" overwrite="yes">
       <fileset dir="${project.root}/${_module.name}/src/etc/examples/secure-socket/etc">
         <include name="messaging.keystore"/>
         <include name="messaging.truststore"/>
       </fileset>
     </copy>
     -->
   </target>

   <target name="_module-messaging-all" depends="_module-messaging-most">

      <!-- Copy the generated javadocs -->
      <mkdir dir="${install.api}/${_module.name}"/>
      <copy todir="${install.api}/${_module.name}" filtering="no">
         <fileset dir="${_module.output}/api">
            <include name="**/*"/>
         </fileset>
      </copy>
   </target>


   <!-- ========= -->
   <!-- hornetq-int -->
   <!-- ========= -->

   <target name="_module-hornetq-int-most">
     <property name="_module.name" value="hornetq-int" override="true"/>
     <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>
      <mkdir dir="${install.root}"/>
      <mkdir dir="${install.root}/extras"/>
      <mkdir dir="${install.root}/extras/hornetq"/>                                                                                    
      <copy todir="${install.root}/extras/hornetq">
         <fileset dir="${_module.output}/">
             <include name="resources/*.xml"/>
             <include name="resources/*.properties"/>
             <include name="lib/**/*"/>
         </fileset>
         <fileset dir="${_module.output}/etc">
            <include name="examples/**/*"/>
            <exclude name="examples/soak"/>
            <exclude name="examples/core"/>
         </fileset>
      </copy>
      <copy todir="${install.root}/extras/hornetq/">
         <fileset dir="${_module.output}/etc">
             <include name="switch.sh"/>
             <include name="README.txt"/>
            <include name="build.xml"/>
         </fileset>
      </copy>
      <copy todir="${install.root}/extras/hornetq/resources">
         <fileset dir="${_module.output}/etc">
             <include name="ra.xml"/>
             <include name="jboss-as-6/**/*"/>
         </fileset>
      </copy>
      <copy todir="${install.root}/extras/hornetq/lib">
         <fileset dir="${org.hornetq.lib}"></fileset>
         <fileset dir="${org.jboss.netty.lib}"></fileset>
      </copy>
      <copy todir="${install.root}/client">
         <fileset dir="${org.hornetq.lib}" includes="*-client.jar"></fileset>
         <fileset dir="${org.jboss.netty.lib}" excludes="*-sources.jar"></fileset>
      </copy>

    <chmod perm="+x">
      <fileset dir="${install.root}/extras/hornetq/">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>

   </target>

   <target name="_module-hornetq-int-all"></target>
   
  <!-- ==== -->
  <!-- J2SE -->
  <!-- ==== -->

  <target name="_module-j2se-most">
    <property name="_module.name" value="j2se" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-j2se.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy tofile="${install.client}/jboss-j2se.jar" file="${_module.output}/lib/jboss-j2se.jar"/>

  </target>

  <target name="_module-j2se-all" depends="_module-j2se-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- ====== -->
  <!-- MBeans -->
  <!-- ====== -->

  <target name="_module-mbeans-most">
    <property name="_module.name" value="mbeans" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-mbeans.jar"/>
      </fileset>
    </copy>

    <!-- Copy the DTDs -->
    <mkdir dir="${install.dtd}"/>
    <copy todir="${install.dtd}" filtering="no">
      <fileset dir="${project.root}/${_module.name}/src/resources/dtd"/>
    </copy>

  </target>

  <target name="_module-mbeans-all" depends="_module-mbeans-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- === -->
  <!-- JMX -->
  <!-- === -->

  <target name="_module-jmx-most">
    <property name="_module.name" value="jmx" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jmx.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty code -->
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${oswego.concurrent.lib}">
        <include name="concurrent.jar"/>
      </fileset>
      <fileset dir="${dom4j.dom4j.lib}">
        <include name="dom4j.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy tofile="${install.client}/jmx-client.jar" file="${_module.output}/lib/jboss-jmx.jar"/>

  </target>

  <target name="_module-jmx-all" depends="_module-jmx-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

  </target>

  <!-- ======== -->
  <!-- Security -->
  <!-- ======== -->

  <target name="_module-security-most">
    <property name="_module.name" value="security" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jbosssx-server.jar"/>
      </fileset>
    </copy>

    <!-- Copy client library to client dir -->
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${jboss.jbosssx.client.lib}">
        <include name="jbosssx-client.jar"/>
      </fileset>
      <fileset dir="${_module.output}/lib">
        <include name="jbosssx-as-client.jar"/>
      </fileset>
    </copy>
   
    <!-- Copy the security configuration files -->
    <mkdir dir="${install.all.deploy}/security"/>
    <copy todir="${install.all.deploy}/security">
      <fileset dir="${_module.output}/etc/deploy/">
        <include name="*-jboss-beans.xml"/>
      </fileset>
    </copy>

    <!-- Install JBoss Security Password batch scripts -->
    <copy todir="${install.bin}" flatten="true" overwrite="true">
       <fileset dir="${_module.output}/etc/bin">
          <include name="password_tool.*"/>
       </fileset>
    </copy>
  </target>

  <target name="_module-security-all" depends="_module-security-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ======= -->
  <!-- Cluster -->
  <!-- ======= -->

  <target name="_module-cluster-most">
    <property name="_module.name" value="cluster" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jbossha.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-ha-legacy-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy the deployers -->
    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/etc">
        <include name="clustering-deployer-jboss-beans.xml"/>
      </fileset>
    </copy>

    <!-- Copy the deployables -->
    <mkdir dir="${install.server}/all/deploy/cluster"/>
    <copy todir="${install.server}/all/deploy/cluster" filtering="no">
      <fileset dir="${_module.output}/etc">
        <include name="hapartition-jboss-beans.xml"/>
        <include name="deploy-hasingleton-jboss-beans.xml"/>
        <include name="hajndi-jboss-beans.xml"/>
        <include name="ha-legacy-jboss-beans.xml"/>
        <include name="timestamps-jboss-beans.xml"/>
        <include name="farm-deployment-jboss-beans.xml"/>
      </fileset>
    </copy>
    <mkdir dir="${install.server}/all/deploy/cluster/jgroups-channelfactory.sar"/>
    <copy todir="${install.server}/all/deploy/cluster/jgroups-channelfactory.sar" filtering="no">
      <fileset dir="${_module.output}/resources/jgroups-channelfactory.sar">
        <include name="**/*"/>
      </fileset>
    </copy>
    <mkdir dir="${install.server}/all/deploy/cluster/jboss-cache-manager.sar"/>
    <copy todir="${install.server}/all/deploy/cluster/jboss-cache-manager.sar" filtering="no">
      <fileset dir="${_module.output}/resources/jboss-cache-manager.sar">
        <include name="**/*"/>
      </fileset>
    </copy>
    <mkdir dir="${install.server}/all/deploy-hasingleton"/>
    <mkdir dir="${install.server}/all/deploy/deploy.last"/>

    <!-- Copy the farmed deployables -->
    <mkdir dir="${install.server}/all/farm"/>
    <copy todir="${install.server}/all/farm" filtering="no">
    <fileset dir="${_module.output}/etc">
    <include name="cluster-examples-service.xml"/>
    </fileset>
    </copy>

  	<!-- Create the ec2 and mod_cluster-ec2 installers -->
    <mkdir dir="${install.root}/extras"/>
    <copy todir="${install.root}/extras">
      <fileset dir="${_module.output}/installers">
        <include name="**"/>
      </fileset>
    </copy>
    <!-- Copy configs from ec2 installer to mod_cluster-ec2 installer -->
    <copy todir="${install.root}/extras/mod_cluster-ec2/resources">
      <fileset dir="${_module.output}/installers/ec2/resources">
        <include name="**"/>
      </fileset>
    </copy>
  	 
  </target>

  <target name="_module-cluster-all" depends="_module-cluster-most">
    <!-- Copy the examples -->
    <mkdir dir="${install.docs}/${module}"/>
    <copy todir="${install.docs}/${module}" filtering="no">
      <fileset dir="${_module.output}">
        <include name="examples/*"/>
      </fileset>
    </copy>

    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ===== -->
  <!-- Varia -->
  <!-- ===== -->

  <target name="_module-varia-most">
    <property name="_module.name" value="varia" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="mail-plugin.jar"/>
        <include name="scheduler-plugin.jar"/>
        <include name="scheduler-plugin-example.jar"/>
        <include name="hsqldb.jar"/>
        <include name="hsqldb-plugin.jar"/>
        <include name="autonumber-plugin.jar"/>
        <include name="properties-plugin.jar"/>
        <include name="jboss-monitoring.jar"/>
        <include name="jboss-srp.jar"/>
      </fileset>
    </copy>

  	<!-- copy the service binding manager to it's deployment --> 
    <copy todir="${install.server}/all/conf/bindingservice.beans">
     <fileset dir="${_module.output}/lib">
     	<include name="jboss-bindingservice.jar"/>
     </fileset>
	</copy>
  	
    <!-- Copy to docs/examples -->
    <mkdir dir="${install.examples.varia}"/>
    <copy todir="${install.examples.varia}" filtering="no">
      <!--
      <fileset dir="${project.root}/testsuite/src/etc/cluster-test">
        <include name="jboss-bindings.xml"/>
      </fileset>
      -->
      <fileset dir="${_module.output}/lib">
        <include name="derby-plugin.jar"/>
        <include name="threaddump.war"/>
      </fileset>
    </copy>

    <mkdir dir="${install.examples}/jmx/persistent-service.sar"/>
    <unjar src="${_module.output}/lib/persistent-service.sar" dest="${install.examples}/jmx/persistent-service.sar"/>

    <mkdir dir="${install.examples.varia}/deployment-service"/>
    <copy todir="${install.examples.varia}/deployment-service">
      <fileset dir="${_module.output}/lib">
        <include name="deployment-service.sar"/>
      </fileset>
      <fileset dir="${_module.output}/resources/services/deployment">
        <exclude name="META-INF/**"/>
      </fileset>
    </copy>

    <!-- MBean Configurator sar for setting mbean attributes when registered -->
    <mkdir dir="${install.examples}/jmx/mbean-configurator.sar"/>
    <unjar src="${_module.output}/lib/mbean-configurator.sar" dest="${install.examples}/jmx/mbean-configurator.sar"/>

    <!-- Client jars -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${apache.scout.lib}">
        <include name="scout.jar"/>
      </fileset>
      <fileset dir="${_module.output}/lib">
        <include name="jbossjmx-ant.jar"/>
        <include name="jboss-srp-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty code -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${sun.javamail.lib}">
        <include name="mail.jar"/>
      </fileset>
    </copy>

    <!-- Default server config -->

    <!-- Copy the deployables -->
    <mkdir dir="${install.server}/all/deploy"/>
    <copy todir="${install.server}/all/deploy" filtering="no">
      <!-- Deployable configuration -->
      <fileset dir="${_module.output}/etc">
        <!-- These should move to example/deploy -->
        <include name="monitoring-service.xml"/>
        <include name="mail-service.xml"/>
        <include name="schedule-manager-service.xml"/>
        <include name="scheduler-service.xml"/>
        <include name="properties-service.xml"/>
      </fileset>
    </copy>

    <!-- copy snmp-adaptor.sar unpacked to deploy -->
    <!-- and the used joesnmp.jar library to lib -->
    <mkdir dir="${install.server}/all/deploy/snmp-adaptor.sar"/>
    <unjar src="${_module.output}/lib/snmp-adaptor.sar" dest="${install.server}/all/deploy/snmp-adaptor.sar"/>
    <copy todir="${install.server}/all/lib" filtering="no">
      <fileset dir="${opennms.joesnmp.lib}">
        <include name="joesnmp.jar"/>
      </fileset>
    </copy>

    <!-- Include the JMX console war unpacked -->
    <mkdir dir="${install.server}/all/deploy/jmx-console.war"/>
    <unjar src="${_module.output}/lib/jmx-console.war" dest="${install.server}/all/deploy/jmx-console.war"/>

    <!-- Include the juddi sar unpacked -->
    <mkdir dir="${install.server}/all/deploy/juddi-service.sar"/>
    <unjar src="${org.jboss.jaxr.lib}/juddi-service.sar"
       dest="${install.server}/all/deploy/juddi-service.sar" />

    <!-- copy scout.jar and juddi.jar to juddi-service.sar directory -->
    <copy todir="${install.server}/all/deploy/juddi-service.sar" filtering="no">
      <fileset dir="${apache.scout.lib}">
        <include name="scout.jar"/>
      </fileset>
      <fileset dir="${juddi.juddi.lib}">
        <include name="juddi.jar"/>
      </fileset>
    </copy>

    <copy todir="${install.server}/all/lib" filtering="no">
      <fileset dir="${wutka.dtdparser.lib}">
        <include name="dtdparser121.jar"/>
      </fileset>
    </copy>

    <!-- Include the HTTP invoker service unpacked -->
    <mkdir dir="${install.server}/all/deploy/httpha-invoker.sar"/>
    <unjar src="${_module.output}/lib/httpha-invoker.sar" dest="${install.server}/all/deploy/httpha-invoker.sar"/>

    <!-- copy the ant jmx client -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jbossjmx-ant.jar"/>
      </fileset>
    </copy>

    <!-- copy the bsh.deployer and its associated beanshell lib from thirdparty -->
    <mkdir dir="${install.server}/all/deployers"/>

    <copy todir="${install.server}/all/deployers" filtering="no">
       <fileset dir="${_module.output}/deployers">
          <include name="**"/>
      </fileset>
    </copy>

    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${beanshell.beanshell.lib}">
         <include name="bsh.jar"/>
      </fileset>
    </copy>

    <!-- Create optional libs; e.g. seam-integration -->
    <mkdir dir="${install.server}/all/deployers/seam.deployer/lib-int"/>
    <copy todir="${install.server}/all/deployers/seam.deployer/lib-int" filtering="no">
      <fileset dir="${org.jboss.seam.integration.lib}">
         <include name="jboss-seam-int-jbossas.jar"/>
      </fileset>
    </copy>

    <!-- copy the jboss-monitoring JAR -->
    <copy file="${project.root}/varia/output/lib/jboss-monitoring.jar" todir="${install.server}/all/lib"/>

    <!-- copy the binding-manager sample file and JAR
    <copy file="${project.root}/varia/output/lib/bindingservice-plugin.jar" todir="${install.server}/all/lib"/>
    -->
  	<!--
    <mkdir dir="${install.examples.binding-manager}"/>
    <copy file="${project.root}/varia/src/resources/services/binding/sample-bindings.xml" todir="${install.examples.binding-manager}"/>
    -->
  	
    <!-- the bean deployer : obsolete in jboss5
    <mkdir dir="${install.all.deploy}/jboss-bean.deployer"/>
    <copy todir="${install.all.deploy}/jboss-bean.deployer" filtering="no">
    <fileset dir="${_module.output}/lib/kernel/jboss-bean.deployer">
    <include name="**/*"/>
    </fileset>
    </copy>
    -->

    <!-- copy the logging-monitor service to examples -->
    <mkdir dir="${install.examples}/jmx/logging-monitor/lib"/>
    <copy todir="${install.examples}/jmx/logging-monitor/lib" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="logging-monitor.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.examples}/jmx/logging-monitor" filtering="no">
      <fileset dir="${_module.output}/resources/services/loggingmonitor"/>
    </copy>

    <!-- copy bsf.jar used by scripting-listener -->
    <copy todir="${install.server}/all/lib" filtering="no">
      <fileset dir="${apache.bsf.lib}">
        <include name="bsf.jar"/>
      </fileset>
    </copy>

    <!-- copy the threads deployer files into their proper places -->
    <copy todir="${install.common.lib}">
      <fileset dir="${org.jboss.threads.lib}">
        <include name="jboss-threads.jar"/>
      </fileset>
    </copy>
    <mkdir dir="${install.server}/all/deployers/jboss-threads.deployer/META-INF"/>
    <copy todir="${install.server}/all/deployers/jboss-threads.deployer">
      <fileset dir="${org.jboss.threads.lib}">
        <include name="jboss-threads-metadata.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.server}/all/deployers/jboss-threads.deployer/META-INF">
      <fileset dir="${_module.output}/resources/threads"/>
    </copy>
    <copy todir="${install.common.lib}">
      <fileset dir="${org.objectweb.asm.lib}">
         <include name="asm.jar" />
      </fileset>
    </copy>
    <copy todir="${install.common.lib}">
      <fileset dir="${cglib.cglib.lib}">
         <include name="cglib.jar" />
      </fileset>
    </copy>
    <!-- copy the xnio deployer files into their proper places -->
    <copy todir="${install.common.lib}">
      <fileset dir="${org.jboss.xnio.lib}">
        <include name="xnio-api.jar"/>
      </fileset>
    </copy>

    <mkdir dir="${install.server}/all/deploy/xnio-provider.jar/META-INF"/>
    <copy todir="${install.server}/all/deploy/xnio-provider.jar">
      <fileset dir="${org.jboss.xnio.lib}">
        <include name="xnio-nio.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.server}/all/deploy/xnio-provider.jar/META-INF">
      <fileset dir="${_module.output}/resources/xnio">
        <include name="xnio-jboss-beans.xml"/>
      </fileset>
    </copy>

    <mkdir dir="${install.server}/all/deployers/xnio.deployer/META-INF"/>
    <copy todir="${install.server}/all/deployers/xnio.deployer">
      <fileset dir="${org.jboss.xnio.lib}">
        <include name="xnio-metadata.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.server}/all/deployers/xnio.deployer/META-INF">
      <fileset dir="${_module.output}/resources/xnio">
        <include name="xnio-deployer-jboss-beans.xml"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-varia-all" depends="_module-varia-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ===== -->
  <!-- JBoss Web -->
  <!-- ===== -->

  <target name="_module-tomcat-most">
    <property name="_module.name" value="tomcat" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>
    <property name="_module.ext" override="true" value="${project.root}/${_module.name}/ext"/>

    <!-- Copy the thirdparty libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jboss.web.lib}">
        <include name="el-api.jar"/>
        <include name="jsp-api.jar"/>
        <include name="servlet-api.jar"/>
      </fileset>
    </copy>

    <!-- Copy the deployers -->
    <mkdir dir="${install.server}/all/deployers/jbossweb.deployer"/>
    <copy todir="${install.server}/all/deployers/jbossweb.deployer">
      <fileset dir="${_module.output}/deploy/jboss-web.deployer"/>
    </copy>
    <!--
    <copy tofile="${install.server}/all/deployers/war-clustering-deployers-jboss-beans.xml"
      file="${project.root}/${_module.name}/src/resources/war-clustering-deployers-jboss-beans.xml" overwrite="true"/>
    -->
  	
  	 <!-- Copy the webserver runtime sar -->
  	 <mkdir dir="${install.server}/all/deploy/jbossweb.sar"/>
    <copy todir="${install.server}/all/deploy/jbossweb.sar">
      <fileset dir="${_module.output}/deploy/jbossweb.sar"/>
    </copy>
  	
    <!-- Copy the ROOT.war -->
    <copy todir="${install.server}/all/deploy" filtering="no">
      <fileset dir="${_module.output}/deploy">
        <include name="ROOT.war/**"/>
      </fileset>
    </copy>
    <!-- Copy the clustering service elements -->
    <copy todir="${install.server}/all/deploy">
      <fileset dir="${_module.output}/deploy">
        <include name="cluster/**"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-tomcat-all" depends="_module-tomcat-most">
  </target>

  <!-- ==== -->
  <!-- IIOP -->
  <!-- ==== -->

  <target name="_module-iiop-most">
    <property name="_module.name" value="iiop" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the jboss-iiop.jar -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-iiop.jar"/>
      </fileset>
    </copy>

    <!-- Copy the jboss-iiop-client.jar -->
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-iiop-client.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty code -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jacorb.jacorb.lib}">
        <include name="jacorb.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty client code -->
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${jacorb.jacorb.lib}">
        <include name="jacorb.jar"/>
      </fileset>
      <fileset dir="${apache.avalon.logkit.lib}">
        <include name="logkit.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty configuration file and jndi.properties file -->
    <mkdir dir="${install.server}/all/conf"/>
    <copy todir="${install.server}/all/conf" filtering="no" overwrite="true">
      <fileset dir="${jacorb.jacorb.resources}">
        <include name="jacorb.properties"/>
      </fileset>
      <fileset dir="${_module.output}/etc/conf">
        <include name="jndi.properties"/>
      </fileset>
    </copy>

    <mkdir dir="${install.server}/all/deploy"/>
    <copy todir="${install.server}/all/deploy" filtering="no">
      <!-- Deployable service -->
      <fileset dir="${_module.output}/etc">
        <include name="iiop-service.xml"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-iiop-all" depends="_module-iiop-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ========== -->
  <!-- Management -->
  <!-- ========== -->

  <target name="_module-management-most">
    <property name="_module.name" value="management" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jsr77.jar"/>
        <include name="jboss-management.jar"/>
      </fileset>
    </copy>

    <mkdir dir="${install.examples}/jmx"/>
    <copy todir="${install.examples}/jmx" filtering="no">
      <!-- Deployable archives -->
      <fileset dir="${_module.output}/lib">
        <include name="ejb-management.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jsr77-client.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="_module-management-all" depends="_module-management-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!-- Copy the generated todo docs -->
    <mkdir dir="${install.todo}/${_module.name}"/>
    <copy todir="${install.todo}/${_module.name}" filtering="no" failonerror="false">
      <fileset dir="${_module.output}/todo">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ======= -->
  <!-- Console -->
  <!-- ======= -->

  <target name="_module-console-most">
    <property name="_module.name" value="console" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated scripts & runnable jars -->
    <mkdir dir="${install.bin}"/>
    <copy todir="${install.bin}" filtering="no">
      <fileset dir="${_module.output}/bin">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${_module.output}/lib">
        <include name="twiddle.jar"/>
      </fileset>
    </copy>
    <chmod perm="+x">
      <fileset dir="${install.bin}">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>

    <!-- Copy the BeanShell JAR -->
    <copy todir="${install.server}/all/lib" filtering="no">
      <fileset dir="${beanshell.beanshell.lib}">
        <include name="bsh.jar"/>
      </fileset>
    </copy>

    <!-- Unpack the plugin manager SAR (embedded) and application WAR -->
    <unjar src="${_module.output}/lib/console-mgr.sar" dest="${install.all.deploy}/management/console-mgr.sar"/>
    <unjar src="${_module.output}/lib/web-console.war" dest="${install.all.deploy}/management/console-mgr.sar/web-console.war"/>

  </target>

  <target name="_module-console-all" depends="_module-console-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ============= -->
  <!-- Compatibility -->
  <!-- ============= -->
  <target name="_module-compatibility-most">
    <call target="make-compat"/>
    <call target="check-compat"/>
  </target>

  <target name="make-compat" if="compatibility.make">
    <!-- Create serialized versions of contract classes -->
    <mkdir dir="${compatibility.dir}"/>
    <java classname="${compatibility.bin}" fork="true" failonerror="true" dir="${compatibility.dir}">
      <arg value="make"/>
      <arg value="${contract.classes}"/>
      <classpath>
        <pathelement path="${compatibility.classpath}"/>
      </classpath>
    </java>
  </target>

  <target name="check-compat" if="compatibility.check">
    <!-- Check compiled contract classes against serialized versions -->
    <java classname="${compatibility.bin}" fork="true" failonerror="true" dir="${compatibility.dir}">
      <arg value="check"/>
      <arg value="${contract.classes}"/>
      <classpath>
        <pathelement path="${compatibility.classpath}"/>
      </classpath>
    </java>
  </target>

  <!-- ========== -->
  <!-- Deployment -->
  <!-- ========== -->

  <target name="_module-deployment-most">
    <property name="_module.name" value="deployment" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-jsr88.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.all.deploy}" filtering="no">
      <fileset dir="${_module.output}/etc">
        <include name="jsr88-service.xml"/>
      </fileset>
    </copy>

    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-deployment.jar"/>
      </fileset>
    </copy>

  </target>

  <target name="_module-deployment-all" depends="_module-deployment-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!-- Copy the generated todo docs -->
    <mkdir dir="${install.todo}/${_module.name}"/>
    <copy todir="${install.todo}/${_module.name}" filtering="no" failonerror="false">
      <fileset dir="${_module.output}/todo">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- =========== -->
  <!-- Webservices -->
  <!-- =========== -->

  <target name="_module-webservices-most">
    <property name="_module.name" value="webservices" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <available classname="java.io.Console" property="BUILT_ON_JDK6_AND_ABOVE"/>
    <antcall target="extract-jbossws-resources"/>
    <antcall target="install-jbossws-to-bin"/>
    <antcall target="install-jbossws-to-client"/>
    <antcall target="install-jbossws-to-endorsed"/>
    <antcall target="install-jbossws-to-common-lib"/>
    <antcall target="install-jbossws-to-deploy"/>
    <antcall target="install-jbossws-to-deployers"/>
    <antcall target="install-jbossws-to-extras"/>
  </target>

  <target name="extract-jbossws-resources">
    <delete dir="${_module.output}/jbossws-native-resources"/>
    <mkdir dir="${_module.output}/jbossws-native-resources"/>
    <unzip
      src="${org.jboss.ws.native.lib}/jbossws-native-resources.jar"
      dest="${_module.output}/jbossws-native-resources"
    />
  </target>

  <target name="install-jbossws-to-extras">
    <mkdir dir="${install.root}"/>
    <mkdir dir="${install.root}/extras"/>
    <mkdir dir="${install.root}/extras/hornetq"/>
    <mkdir dir="${install.root}/extras/hornetq/lib"/>
    <copy todir="${install.root}/extras/hornetq/lib">
      <fileset dir="${_module.output}/lib">
        <include name="jbossws-hornetq.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="install-jbossws-to-bin">
    <!-- Install JBossWS batch scripts -->
    <copy todir="${install.bin}" flatten="true" overwrite="true">
      <fileset dir="${_module.output}/jbossws-native-resources/bin">
        <include name="wsconsume.bat"/>
        <include name="wsconsume.sh"/>
        <include name="wsprovide.bat"/>
        <include name="wsprovide.sh"/>
        <include name="wsrunclient.bat"/>
        <include name="wsrunclient.sh"/>
        <include name="wstools.bat"/>
        <include name="wstools.sh"/>
      </fileset>
    </copy>
  </target>

  <target name="install-jbossws-to-client">
    <!-- Install JBossWS jars to client directory -->
    <copy todir="${install.client}" flatten="true" overwrite="true">
      <fileset dir="${_module.output}/lib">
        <include name="jbossws-jboss50.jar"/>
      </fileset>
      <fileset dir="${org.jboss.ws.native.lib}">
        <include name="jbossws-native-client.jar"/>
        <include name="jbossws-native-core.jar"/>
        <include name="jbossws-native-jaxrpc.jar"/>
        <include name="jbossws-native-jaxws-ext.jar"/>
        <include name="jbossws-native-jaxws.jar"/>
        <include name="jbossws-native-saaj.jar"/>
      </fileset>
      <fileset dir="${org.jboss.ws.lib}">
        <include name="jbossws-common.jar"/>
        <include name="jbossws-framework.jar"/>
        <include name="jbossws-spi.jar"/>
      </fileset>
      <fileset dir="${sun.fi.lib}">
        <include name="FastInfoset.jar"/>
      </fileset>
      <fileset dir="${org.codehaus.jettison.lib}">
        <include name="jettison.jar"/>
      </fileset>
      <fileset dir="${sun.jaxb.lib}">
        <include name="jaxb-api.jar"/>
      </fileset>
      <fileset dir="${stax.api.lib}">
        <include name="stax-api.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="install-jbossws-to-endorsed" if="BUILT_ON_JDK6_AND_ABOVE">
    <!-- Endorse JBossWS jars on JDK1.6 and above -->
    <copy todir="${install.lib}/endorsed" flatten="true" overwrite="true">
      <fileset dir="${org.jboss.ws.native.lib}">
        <include name="jbossws-native-jaxws.jar"/>
        <include name="jbossws-native-jaxws-ext.jar"/>
        <include name="jbossws-native-saaj.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="install-jbossws-to-common-lib">
    <!-- Install JBossWS jars to common/lib directory -->
    <copy todir="${install.common.lib}" flatten="true" overwrite="true">
      <fileset dir="${org.jboss.ws.native.lib}">
        <include name="jbossws-native-jaxrpc.jar"/>
        <include name="jbossws-native-jaxws.jar"/>
        <include name="jbossws-native-jaxws-ext.jar"/>
        <include name="jbossws-native-saaj.jar"/>
      </fileset>
      <fileset dir="${org.jboss.ws.lib}">
        <include name="jbossws-common.jar"/>
        <include name="jbossws-framework.jar"/>
        <include name="jbossws-spi.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="install-jbossws-to-deploy">
    <!-- Install JBossWS web console to deploy directory -->
    <mkdir dir="${install.all.deploy}/jbossws.sar"/>
    <unzip
      src="${org.jboss.ws.native.lib}/jbossws-native-management.war"
      dest="${install.all.deploy}/jbossws.sar/jbossws-management.war"
    />
  </target>

  <target name="install-jbossws-to-deployers">
    <!-- Install JBossWS deployers, runtime jars and configs -->
    <mkdir dir="${install.all.deployers}/jbossws.deployer"/>
    <unzip dest="${install.all.deployers}/jbossws.deployer" src="${_module.output}/lib/jbossws-jboss50-deployer.zip"/>
    <copy todir="${install.all.deployers}/jbossws.deployer" flatten="true" overwrite="true">
      <fileset dir="${sun.fi.lib}">
        <include name="FastInfoset.jar"/>
      </fileset>
      <fileset dir="${jboss.jaxbintros.lib}">
        <include name="jboss-jaxb-intros.jar"/>
      </fileset>
      <fileset dir="${org.jboss.ws.native.lib}">
        <include name="jbossws-native-core.jar"/>
      </fileset>
      <fileset dir="${org.codehaus.jettison.lib}">
        <include name="jettison.jar"/>
      </fileset>
      <fileset dir="${ibm.wsdl4j.lib}">
        <include name="wsdl4j.jar"/>
      </fileset>
      <fileset dir="${org.apache.lib}">
        <include name="xmlsec.jar"/>
      </fileset>
    </copy>
    <copy todir="${install.all.deployers}/jbossws.deployer">
      <fileset dir="${_module.output}/jbossws-native-resources/resources/jbossws-jboss510/jbossws.beans">
        <include name="META-INF/**"/>
      </fileset>
    </copy>
    <copy todir="${install.all.deployers}/jbossws.deployer/META-INF">
      <fileset dir="${_module.output}/jbossws-native-resources/resources">
        <include name="standard-*-config.xml"/>
      </fileset>
    </copy>
    <copy todir="${install.all.deployers}/jbossws.deployer" flatten="true" overwrite="true">
      <fileset dir="${org.jboss.ws.lib}">
        <include name="jbossws-common.jar"/>
        <include name="jbossws-framework.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="_module-webservices-all" depends="_module-webservices-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!-- Copy the generated todo docs -->
    <mkdir dir="${install.todo}/${_module.name}"/>
    <copy todir="${install.todo}/${_module.name}" filtering="no" failonerror="false">
      <fileset dir="${_module.output}/todo">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ============ -->
  <!-- Hibernate    -->
  <!-- ============ -->

  <target name="_module-hibernate-int-most">
    <property name="_module.name" value="hibernate-int" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <mkdir dir="${install.all.lib}"/>

    <!-- The hibernate-int module output -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
    </copy>

    <!-- The hibernate jar -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${hibernate.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
     <!-- <fileset dir="${org.hibernate.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/> -->
    </copy>

    <copy todir="${install.server}/all/deployers" filtering="no">
      <fileset dir="${_module.output}/resources">
        <include name="hibernate-deployer-jboss-beans.xml"/>
      </fileset>
    </copy>

    <!-- ASM jars (cglib dependency)
    <copy todir="${install.all.lib}" filtering="no">
    <fileset dir="${asm.asm.lib}" includes="*.jar" />
    </copy>
    -->

    <!-- ANTLR jar -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${antlr.antlr.lib}" includes="antlr.jar"/>
    </copy>
    
    <!-- Copy client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${antlr.antlr.lib}" includes="antlr.jar"/>
    </copy>

    <!-- CGLIB jar
    <copy todir="${install.all.lib}" filtering="no">
    <fileset dir="${cglib.lib}" includes="*.jar"/>
    </copy>
    -->

    <!-- Commons collections jar -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${apache.collections.lib}" includes="*.jar"
               excludes="*-sources.jar, *-javadoc.jar"/>
    </copy>

  </target>

  <target name="_module-hibernate-int-all" depends="_module-hibernate-int-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ProfileService extensions -->
  <target name="_module-profileservice-most">
    <property name="_module.name" value="profileservice" override="true"/>
    <property name="_module.output" override="true" value="${project.root}/${_module.name}/output"/>

    <mkdir dir="${install.all.lib}"/>

    <!-- The profileservice module output -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${_module.output}/lib" includes="jboss-profileservice.jar"/>
    </copy>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${_module.output}/lib">
        <include name="jboss-profileservice-client.jar"/>
      </fileset>
    </copy>
    <!-- Copy the profileservice hdscanner bean to deploy -->
    <copy todir="${install.server}/all/deploy/"
      file="${_module.output}/resources/hdscanner-jboss-beans.xml" />
    <copy todir="${install.server}/all/deploy/"
      file="${_module.output}/resources/hdscanner-jboss-beans-production.xml" />
    <!-- Copy the profileservice beans to deploy -->
    <copy todir="${install.server}/all/deploy/"
      file="${_module.output}/resources/profileservice-jboss-beans.xml" />
  </target>

  <!-- ============ -->
  <!--   Spring     -->
  <!-- ============ -->

   <target name="_module-spring-int-most">
      <property name="_module.name" value="spring-int" override="true"/>
      <property name="_module.output" override="true"
                value="${project.root}/${_module.name}/output"/>

      <!-- Uncomment this if you want jboss-spring.deployer in all configration -->
<!--
      <mkdir dir="${install.server}/all/deploy/jboss-spring.deployer"/>
      <unjar src="${_module.output}/lib/jboss-spring.deployer"
             dest="${install.server}/all/deploy/jboss-spring.deployer"/>
-->
   </target>

   <target name="_module-spring-int-all" depends="_module-spring-int-most">
      <mkdir dir="${install.api}/${_module.name}"/>
      <copy todir="${install.api}/${_module.name}" filtering="no">
         <fileset dir="${_module.output}/api">
            <include name="**/*"/>
         </fileset>
      </copy>
   </target>

   <target name="thirdparty">
    <!-- Copy thirdparty libraries -->
    <mkdir dir="${install.all.lib}"/>
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${jboss.cache.jbosscache.core.lib}">
        <include name="jbosscache-core.jar"/>
      </fileset>
      <fileset dir="${jboss.cache.jbosscache.pojo.lib}">
        <include name="jbosscache-pojo.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.negotiation.lib}">
        <include name="jboss-negotiation.jar"/>
      </fileset>      
      <fileset dir="${jboss.security.lib}">
        <include name="jbossxacml.jar"/>
      </fileset>
      <fileset dir="${org.slf4j.lib}">
        <include name="slf4j-api.jar"/>
      </fileset>
      <fileset dir="${org.jboss.slf4j.lib}">
        <include name="slf4j-jboss-logging.jar"/>
      </fileset>
    </copy>

    <!-- Copy the generated libraries -->
    <mkdir dir="${install.lib}"/>
    <copy todir="${install.lib}" filtering="no">
      <fileset dir="${javassist.javassist.lib}">
        <include name="javassist.jar"/>
      </fileset>
      <fileset dir="${jboss.aop.lib}">
        <include name="jboss-aop.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.bootstrap.lib}" includes="*.jar"
        excludes="*-sources.jar, *-javadoc.jar" />
      <fileset dir="${jboss.common.core.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.spi.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.log4j.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.jdk.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${org.jboss.logbridge.lib}">
        <include name="jboss-logbridge.jar"/>
      </fileset>
      <fileset dir="${org.jboss.logmanager.lib}">
        <include name="jboss-logmanager.jar"/>
      </fileset>
      <fileset dir="${jboss.jbossxb.lib}">
        <include name="jboss-xml-binding.jar"/>
      </fileset>
      <fileset dir="${jboss.integration.lib}">
        <include name="jboss-classloading-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.profileservice.spi.lib}">
        <include name="jboss-profileservice-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.reflect.lib}">
        <include name="jboss-reflect.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.mdr.lib}">
        <include name="jboss-mdr.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.man.lib}">
        <include name="jboss-metatype.jar"/>
        <include name="jboss-managed.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.cl.lib}">
        <include name="jboss-classloader.jar"/>
        <include name="jboss-classloading.jar"/>
        <include name="jboss-classloading-vfs.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.deployers.lib}">
        <include name="jboss-deployers-client.jar"/>
        <include name="jboss-deployers-client-spi.jar"/>
        <include name="jboss-deployers-core.jar"/>
        <include name="jboss-deployers-core-spi.jar"/>
        <include name="jboss-deployers-impl.jar"/>
        <include name="jboss-deployers-spi.jar"/>
        <include name="jboss-deployers-structure-spi.jar"/>
        <include name="jboss-deployers-vfs.jar"/>
        <include name="jboss-deployers-vfs-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.microcontainer.lib}">
        <include name="jboss-aop-mc-int.jar"/>
        <include name="jboss-dependency.jar"/>
        <include name="jboss-kernel.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.vfs.lib}">
        <include name="jboss-vfs.jar"/>
      </fileset>
      <fileset dir="${trove.trove.lib}">
        <include name="trove.jar"/>
      </fileset>
      <fileset dir="${com.sun.xml.bind.lib}">
        <include name="jaxb-impl.jar"/>
        <include name="jaxb-xjc.jar"/>
      </fileset>
      <fileset dir="${woodstox.woodstox.lib}">
        <include name="wstx.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.security.spi.lib}">
        <include name="jboss-security-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.jbosssx.lib}">
        <include name="jbosssx.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.javaee.lib}">
        <include name="jboss-javaee.jar"/>
      </fileset>
    </copy>
    
    <!-- Copy the generated client libraries -->
    <mkdir dir="${install.client}"/>
    <copy todir="${install.client}" filtering="no">
      <fileset dir="${apache.logging.lib}">
        <include name="commons-logging.jar"/>
      </fileset>
      <fileset dir="${org.apache.lib}">
        <include name="xmlsec.jar"/>
      </fileset>
      <fileset dir="${ibm.wsdl4j.lib}">
        <include name="wsdl4j.jar"/>
      </fileset>
      <fileset dir="${javassist.javassist.lib}">
        <include name="javassist.jar"/>
      </fileset>
      <fileset dir="${jboss.common.core.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.spi.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.log4j.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${jboss.common.logging.jdk.lib}">
        <exclude name="*-sources.jar"/>
      </fileset>
      <fileset dir="${org.slf4j.lib}">
        <include name="slf4j-api.jar"/>
      </fileset>
      <fileset dir="${org.jboss.slf4j.lib}">
        <include name="slf4j-jboss-logging.jar"/>
      </fileset>
      <fileset dir="${jboss.integration.lib}">
        <include name="jboss-integration.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.ejb3.ext.api.lib}">
        <include name="jboss-ejb3-ext-api.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.jaspi.api.lib}">
        <include name="jboss-jaspi-api.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.javaee.lib}">
        <include name="jboss-javaee.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.security.spi.lib}">
        <include name="jboss-security-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.jnp.client.lib}">
        <include name="jnp-client.jar"/>
      </fileset>
      <fileset dir="${jboss.jbossxb.lib}">
        <include name="jboss-xml-binding.jar"/>
      </fileset>
      <fileset dir="${jboss.jbosssx.lib}">
        <include name="jbosssx-client.jar"/>
      </fileset>
      <fileset dir="${jboss.metadata.lib}">
        <include name="jboss-metadata.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.mdr.lib}">
        <include name="jboss-mdr.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.deployers.lib}">
        <include name="jboss-deployers-core.jar"/>
        <include name="jboss-deployers-core-spi.jar"/>
        <include name="jboss-deployers-client.jar"/>
        <include name="jboss-deployers-client-spi.jar"/>
        <include name="jboss-deployers-vfs.jar"/>
        <include name="jboss-deployers-vfs-spi.jar"/>
      </fileset>
      <fileset dir="${jboss.remoting.lib}">
        <include name="jboss-remoting.jar"/>
      </fileset>
      <fileset dir="${jboss.serialization.lib}">
        <include name="jboss-serialization.jar"/>
      </fileset>
      <fileset dir="${org.jboss.cluster.lib}">
        <include name="jboss-ha-client.jar"/>
      </fileset>
      <fileset dir="${sun.jaf.lib}">
        <include name="activation.jar"/>
      </fileset>
      <fileset dir="${sun.javamail.lib}">
        <include name="mail.jar"/>
      </fileset>
      <fileset dir="${com.sun.xml.bind.lib}">
        <include name="jaxb-impl.jar"/>
        <include name="jaxb-xjc.jar"/>
      </fileset>
      <fileset dir="${sun.jaxws.lib}">
        <include name="jaxws-tools.jar"/>
        <include name="jaxws-rt.jar"/>
        <include name="stax-ex.jar"/>
        <include name="streambuffer.jar"/>
      </fileset>
      <fileset dir="${trove.trove.lib}">
        <include name="trove.jar"/>
      </fileset>
      <fileset dir="${woodstox.woodstox.lib}">
        <include name="wstx.jar"/>
      </fileset>
    </copy>

    <!-- Copy thirdparty code to lib/endorsed -->
    <mkdir dir="${install.lib}/endorsed"/>
    <copy todir="${install.lib}/endorsed" filtering="no">
      <fileset dir="${apache.xerces.lib}">
        <!-- http://jira.jboss.org/jira/browse/JBAS-5487
        <include name="xml-apis.jar"/-->
        <include name="xercesImpl.jar"/>
        <include name="resolver.jar"/>
      </fileset>
      <fileset dir="${apache.xalan.lib}">
        <include name="xalan.jar"/>
        <include name="serializer.jar"/>
      </fileset>
      <fileset dir="${sun.jaxb.lib}">
        <include name="jaxb-api.jar"/>
      </fileset>
      <fileset dir="${sun.jaf.lib}">
        <include name="activation.jar"/>
      </fileset>
      <fileset dir="${stax.api.lib}">
        <include name="stax-api.jar"/>
      </fileset>
    </copy>
    <!-- avoid the duplicate copying of jaxb/stax apis from jbossws macros -->
    <delete file="${install.lib}/jaxb-api.jar"/>
    <delete file="${install.lib}/stax-api.jar"/>
    
    <!-- Copy thirdparty code to server/all/lib -->
    <copy todir="${install.all.lib}" filtering="no">
      <fileset dir="${apache.logging.lib}">
        <include name="commons-logging.jar"/>
      </fileset>
      <fileset dir="${jaxen.jaxen.lib}">
        <include name="jaxen.jar"/>
      </fileset>
      <fileset dir="${org.jboss.cluster.lib}">
        <include name="jboss-ha-client.jar"/>
        <include name="jboss-ha-server-api.jar"/>
        <include name="jboss-ha-server-cache-spi.jar"/>
        <include name="jboss-ha-server-cache-jbc.jar"/>
      </fileset>
      <fileset dir="${jboss.integration.lib}">
        <include name="jboss-integration.jar"/>
      </fileset>
      <fileset dir="${jboss.metadata.lib}">
        <include name="jboss-metadata.jar"/>
      </fileset>
      <fileset dir="${jboss.jboss.jaspi.api.lib}">
        <include name="jboss-jaspi-api.jar"/>
      </fileset>
      <fileset dir="${jboss.jnpserver.lib}">
        <include name="jnpserver.jar"/>
      </fileset>
      <fileset dir="${jgroups.jgroups.lib}">
        <include name="jgroups.jar"/>
      </fileset>
      <fileset dir="${net.jcip.lib}">
        <include name="jcip-annotations.jar"/>
      </fileset>
    </copy>
    <!-- Unpack the javaee dtds/schemas from jboss-metadata.jar -->
    <mkdir dir="${install.dtd}"/>
    <mkdir dir="${install.schema}"/>
    <unzip src="${jboss.metadata.lib}/jboss-metadata.jar" dest="${install.docs}">
      <patternset>
        <include name="dtd/*"/>
        <include name="schema/*"/>
      </patternset>
    </unzip>

       <!-- copy binary release of JBossTS (JTS libs are a superset of the JTA ones) from thirdparty repo -->
       <copy todir="${install.all.lib}" filtering="no">
           <fileset dir="${project.thirdparty}/jboss/jbossts/lib/">
               <include name="jbossjts.jar"/>
               <include name="jbossjts-integration.jar"/>
               <include name="jbossjts-jacorb.jar"/>
               <include name="jbossts-common.jar"/>
           </fileset>
       </copy>
       <!-- in in JTS mode the client needs some impl classes to make ClientUserTransaction work -->
       <copy todir="${install.client}" filtering="no">
           <fileset dir="${project.thirdparty}/jboss/jbossts/lib/">
               <include name="jbossjts.jar"/>
               <include name="jbossjts-integration.jar"/>
               <include name="jbossjts-jacorb.jar"/>
           </fileset>
       </copy>
       <!-- install the JTA version of the config file as the default -->
       <copy tofile="${install.all.conf}/jbossts-properties.xml"
             filtering="no" file="${project.thirdparty}/jboss/jbossts/resources/jbossts-properties.xml-forJTA"/>

       <!-- copy optional JBossTS binaries from thirdparty repo -->
       <mkdir dir="${install.examples}/transactions"/>
       <copy todir="${install.examples}/transactions" filtering="no">
           <fileset dir="${project.thirdparty}/jboss/jbossts/lib/">
               <include name="jbossts-tools.sar"/>
               <include name="jbossxts.sar"/>
           </fileset>
       </copy>
       <copy tofile="${install.examples}/transactions/jbossts-properties.xml"
             filtering="no" file="${project.thirdparty}/jboss/jbossts/resources/jbossts-properties.xml-forJTS"/>
       <!-- copy JBossTS JTS install script and instructions from jbossas/jts module -->
       <copy todir="${install.examples}/transactions" filtering="no">
           <fileset dir="${project.root}/jbossas/transactions">
               <include name="README.txt"/>
               <include name="build.xml"/>
           </fileset>
       </copy>

    <chmod perm="+x">
      <fileset dir="${install.bin}">
        <include name="*.sh"/>
      </fileset>
    </chmod>
   	
    <mkdir dir="${install.server}/all/deploy/admin-console.war"/>
    <unjar src="${org.jboss.jopr.lib}/jopr-embedded-jbas5.war" dest="${install.server}/all/deploy/admin-console.war"/>

    <mkdir dir="${install.server}/default/deploy/admin-console.war"/>
    <unjar src="${org.jboss.jopr.lib}/jopr-embedded-jbas5.war" dest="${install.server}/default/deploy/admin-console.war"/>

  </target>
</project>
