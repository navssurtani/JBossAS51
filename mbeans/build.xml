<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
  <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
  <!ENTITY modules    SYSTEM "../tools/etc/buildmagic/modules.ent">
]>

<!-- $Id: build.xml 57108 2006-09-23 20:55:54Z scott.stark@jboss.org $ -->

<!--+======================================================================+-->
<!--| JBoss (The OpenSource J2EE WebOS) Build File                         |-->
<!--|                                                                      |-->
<!--| Distributable under LGPL license.                                    |-->
<!--| See terms of license at http://www.gnu.org.                          |-->
<!--|                                                                      |-->
<!--| This file has been designed to work with the 'tools' module and      |-->
<!--| Buildmagic extentions.                                               |-->
<!--+======================================================================+-->

<project default="main" name="JBoss/MBeans">

  <!--+====================================================================+-->
  <!--| Setup                                                              |-->
  <!--|                                                                    |-->
  <!--| Include the common build elements.                                 |-->
  <!--|                                                                    |-->
  <!--| This defines several different targets, properties and paths.      |-->
  <!--| It also sets up the basic extention tasks amoung other things.     |-->
  <!--+====================================================================+-->

  &buildmagic;

  <!--+====================================================================+-->
  <!--| Initialization                                                     |-->
  <!--|                                                                    |-->
  <!--| Initialize the build system.  Other targets should depend on       |-->
  <!--| 'init'.                                                            |-->
  <!--+====================================================================+-->

    <target name="init" unless="init.disable" depends="_buildmagic:init">
    </target>

    <!-- Added since in target.ent, but can not include since duplicate _default:init
         in buildmagic.ent -->
    <target name="_default:most"
       description="Builds almost everything."
       depends="output"/>

    <target name="_default:help"
            description="Show this help message."
       depends="_buildmagic:help:standard"/>

    <target name="_default:all"
       description="Builds everything."
       depends="most,docs"/>


  <!--+====================================================================+-->
  <!--| Configuration                                                      |-->
  <!--|                                                                    |-->
  <!--| This target is invoked by the Buildmagic initialization logic      |-->
  <!--| and should contain module specific configuration elements.         |-->
  <!--+====================================================================+-->

  <target name="configure" unless="configure.disable">

      &libraries;
      &modules;

      <property name="source.classes" value="${module.source}/main"/>
      <property name="source.java" value="${source.classes}"/>

      <!-- Configure modules -->
      <path id="dependentmodule.classpath">
         <!-- Add dependent module classpath elements here. -->
      <path refid="jboss.common.core.classpath"/>
      <path refid="jboss.common.logging.spi.classpath"/>
      <path refid="jboss.common.logging.log4j.classpath"/>
      <path refid="jboss.common.logging.jdk.classpath"/>
        <path refid="jboss.j2se.classpath"/>
        <path refid="jboss.j2se.classpath"/>
      </path>

      <!-- Configure thirdparty libraries -->
      <path id="library.classpath">
        <path refid="apache.bcel.classpath"/>
        <path refid="apache.xerces.classpath"/>
        <path refid="dom4j.dom4j.classpath"/>
        <path refid="jboss.jbossxb.classpath"/>
      </path>

        <!-- The combined thirdparty classpath -->
        <path id="thirdparty.classpath">
          <path refid="library.classpath"/>
          <path refid="dependentmodule.classpath"/>
        </path>

      <!-- The classpath required to build classes. -->
      <path id="javac.classpath">
        <pathelement path="${classpath}"/>
        <pathelement path="${local.classpath}"/>
        <path refid="thirdparty.classpath"/>
      </path>

      <!-- Where source files live -->
      <property name="source.classes" value="${module.source}/main"/>
      <property name="source.docs" value="${module.source}/docs"/>
      <property name="source.etc" value="${module.source}/etc"/>
      <property name="source.examples" value="${module.source}/examples"/>
      <property name="source.bin" value="${module.source}/bin"/>
      <property name="source.resources" value="${module.source}/resources"/>
      <property name="source.stylesheets" value="${module.source}/stylesheets"/>
      <property name="source.web" value="${module.source}/web"/>
      <property name="source.test" value="${module.source}/test"/>
      <property name="source.java" value="${module.source}/main"/>

      <!-- Where build generated files will go -->
      <property name="build.api" value="${module.output}/api"/>
      <property name="build.bin" value="${module.output}/bin"/>
      <property name="build.classes" value="${module.output}/classes"/>
      <property name="build.docs" value="${module.output}/docs"/>
      <property name="build.stylesheets" value="${module.output}/stylesheets"/>
      <property name="build.etc" value="${module.output}/etc"/>
      <property name="build.examples" value="${module.output}/examples"/>
      <property name="build.gen" value="${module.output}/gen"/>
      <property name="build.gen.classes" value="${build.gen}/classes"/>
      <property name="build.jmx-api" value="${module.output}/jmx-api"/>
      <property name="build.jmx-doc" value="${module.output}/jmx-doc"/>
      <property name="build.lib" value="${module.output}/lib"/>
      <property name="build.deploy" value="${module.output}/deploy"/>
      <property name="build.reports" value="${module.output}/reports"/>
      <property name="build.resources" value="${module.output}/resources"/>
      <property name="build.todo" value="${module.output}/todo"/>
      <property name="build.web" value="${module.output}/web"/>
      <property name="build.log" value="${module.output}/log"/>
      <property name="build.cache" value="${module.output}/cache"/>
      <property name="build.test" value="${module.output}/test"/>
      <property name="build.gen.test" value="${build.gen}/test"/>

    <!-- Module name & version -->
    <property name="module.name" value="jbossmbeans"/>
    <property name="module.Name" value="JBoss/MBeans"/>
    <property name="javac.target" value="1.5"/>
    <property name="javac.source" value="1.5"/>
      <!-- Where build generated files will go -->
      <property name="build.reports" value="${module.output}/reports"/>
      <property name="build.classes" value="${module.output}/classes"/>
      <property name="build.lib" value="${module.output}/lib"/>
      <property name="build.api" value="${module.output}/api"/>
      <property name="build.etc" value="${module.output}/etc"/>
      <property name="build.gen-src" value="${module.output}/gen-src"/>
      <property name="build.gen" value="${module.output}/gen"/>


    <!--+=======================================+-->
    <!--| Override any default properties here. |-->
    <!--+=======================================+-->

    <property name="javadoc.packages" value="org.jboss.*"/>

  </target>


  <!--+====================================================================+-->
  <!--| Compile                                                            |-->
  <!--|                                                                    |-->
  <!--| This target should depend on other compile-* targets for each      |-->
  <!--| different type of compile that needs to be performed, short of     |-->
  <!--| documentation compiles.                                            |-->
  <!--+====================================================================+-->

  <target name="compile"
	  description="Compile all source files."
	  depends="init, _default:compile-classes, _default:compile-etc, compile-resources">
    <!-- Add module specific elements here. -->
  </target>

  <!-- Compile resource files (dtds) -->
  <target name="compile-resources" depends="init">
    <mkdir dir="${build.resources}"/>
    <copy todir="${build.resources}">
      <fileset dir="${source.resources}">
         <include name="dtd/*.dtd"/>
         <include name="*.xml"/>
      </fileset>
    </copy>
  </target>

  <!--+====================================================================+-->
  <!--| Generate Output                                                    |-->
  <!--|                                                                    |-->
  <!--| Generates the target output for this module. Target output is      |-->
  <!--| the output which is ment to be released or used by external        |-->
  <!--| modules.                                                           |-->
  <!--+====================================================================+-->

  <target name="output"
	  description="Generate all target output."
          depends="_buildmagic:build-bypass-check"
	  unless="build-bypass.on">

    <call target="compile"/>

    <mkdir dir="${build.lib}"/>

    <!-- Build the jboss-mbeans.jar -->
    <jar jarfile="${build.lib}/jboss-mbeans.jar" manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="**"/>
      </fileset>
      <!-- include dtds for xmbeans -->
      <fileset dir="${build.resources}">
        <include name="dtd/*.dtd"/>
        <!-- include descriptor for MBean Info DB service -->
        <include name="*-xmbeandd.xml"/>
      </fileset>
    </jar>

    <!-- Update the build marker to allow bypassing -->
    <touch file="${build-bypass.marker}"/>

  </target>


  <!--+====================================================================+-->
  <!--| Documents                                                          |-->
  <!--|                                                                    |-->
  <!--| Generate all documentation for this module.                        |-->
  <!--+====================================================================+-->

<!--  <target name="docs" depends="_default:docs">
  </target> -->


  <!--+====================================================================+-->
  <!--| Misc.                                                              |-->
  <!--|                                                                    |-->
  <!--| Standard targets and psuedo-targets.                               |-->
  <!--+====================================================================+-->

  <target name="clean" depends="_default:clean">
    <!-- Add module specific elements here. -->
  </target>

  <target name="clobber" depends="_default:clobber">
    <!-- Add module specific elements here. -->
  </target>

  <!-- main, all, most and help are primary psuedo-targets -->
  <target name="main" depends="most"/>
  <target name="all" depends="_default:all"/>
  <target name="most" depends="_default:most"/>
  <target name="help" depends="_default:help"/>

</project>
